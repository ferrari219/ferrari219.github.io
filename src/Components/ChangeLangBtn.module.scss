@import 'scss/grid';

.switch {
	--width: 5rem;
	--height: 3rem;
	--padding: 0rem;
	--handle-size: calc(var(--height) - var(--padding) * 2);

	display: inline-block;
	outline-width: 0;
	margin-top: 2rem;
	@include mobile-device {
		text-align: center;
	}

	input {
		position: absolute;
		clip: rect(1px, 1px, 1px, 1px);
		clip-path: inset(50%);
		height: 1px;
		width: 1px;
		margin: -1px;
		overflow: hidden;
	}
	label {
		display: inline-grid;
		grid-template-columns: auto auto;
		column-gap: 10px;
	}
	.area {
		padding: 4px;
		margin: -4px;
	}
	&:active {
		outline-width: 0;
	}
	.background,
	.handle {
		transition: all 0.1s ease;
	}

	.background {
		display: inline-flex;
		flex-direction: row;
		align-items: center;
		width: var(--width);
		height: var(--height);
		border-radius: var(--height);
		padding: 0 var(--padding);
		vertical-align: text-bottom;
		user-select: none;
		background-color: #705aec;
		box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.25);
		overflow: hidden;
		transition: background-color 0.15s ease;
	}
	&:focus .area {
		outline: 1px dotted gray;
	}

	&:active .area {
		outline-width: 0;
	}

	&:focus .background,
	.area:hover .background {
		background-color: #705aec;
	}

	.handle {
		width: var(--handle-size);
		height: var(--handle-size);
		background-color: white;
		border-radius: 50%;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5), inset 0 2px 4px rgba(0, 0, 0, 0.15);
	}

	.handle:hover {
		background-color: white;
	}

	input:checked + label .area .background {
		background-color: green;
	}

	input:checked + label .area .handle {
		background-color: white;
		transform: translateX(calc(var(--width) - var(--handle-size)));
	}
	span {
		font-size: 2rem;
	}
}
